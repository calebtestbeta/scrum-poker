{
  "rules": {
    "rooms": {
      "$roomId": {
        ".read": "auth != null",
        ".write": "auth != null && auth.uid != null",
        
        "created_at": {
          ".validate": "newData.isNumber() && newData.val() <= now + 300000"
        },
        
        "lastActivity": {
          ".validate": "newData.isNumber() && newData.val() <= now + 300000"
        },
        
        "last_activity": {
          ".validate": "newData.isNumber() && newData.val() <= now + 300000"
        },
        
        "phase": {
          ".validate": "newData.isString() && (newData.val() === 'voting' || newData.val() === 'revealing' || newData.val() === 'finished')"
        },
        
        "task_type": {
          ".validate": "newData.isString()"
        },
        
        "settings": {
          ".read": "auth != null",
          ".write": "auth != null && auth.uid != null"
        },
        
        "statistics": {
          ".read": "auth != null", 
          ".write": "auth != null && auth.uid != null"
        },
        
        "history": {
          ".read": "auth != null",
          ".write": "auth != null && auth.uid != null"
        },
        
        "players": {
          ".read": "auth != null",
          ".write": "auth != null && auth.uid != null",
          
          "$playerId": {
            ".validate": "newData.hasChild('name') && newData.hasChild('role')",
            
            "name": {
              ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 20"
            },
            
            "role": {
              ".validate": "newData.isString() && (newData.val() === 'dev' || newData.val() === 'qa' || newData.val() === 'scrum_master' || newData.val() === 'po' || newData.val() === 'other')"
            },
            
            "joinedAt": {
              ".validate": "newData.isNumber() && newData.val() <= now + 300000"
            },
            
            "joined_at": {
              ".validate": "newData.isNumber() && newData.val() <= now + 300000"
            },
            
            "lastHeartbeat": {
              ".validate": "newData.isNumber() && newData.val() <= now + 300000"
            },
            
            "lastActivity": {
              ".validate": "newData.isNumber() && newData.val() <= now + 300000"
            },
            
            "last_active": {
              ".validate": "newData.isNumber() && newData.val() <= now + 300000"
            },
            
            "lastSeen": {
              ".validate": "newData.isNumber() && newData.val() <= now + 300000"
            },
            
            "online": {
              ".validate": "newData.isBoolean()"
            },
            
            "hasVoted": {
              ".validate": "newData.isBoolean()"
            },
            
            "vote": {
              ".validate": "newData.val() === null || newData.isNumber() || newData.isString()"
            }
          }
        },
        
        "votes": {
          ".read": "auth != null",
          ".write": "auth != null && auth.uid != null",
          
          "$playerId": {
            "value": {
              ".validate": "newData.isNumber() || newData.isString()"
            },
            
            "timestamp": {
              ".validate": "newData.isNumber() && newData.val() <= now + 300000"
            },
            
            "playerId": {
              ".validate": "newData.isString()"
            },
            
            "player_role": {
              ".validate": "newData.isString()"
            }
          }
        },
        
        "learning_data": {
          ".read": "auth != null",
          ".write": "auth != null && auth.uid != null",
          
          "current_advice": {
            ".read": "auth != null",
            ".write": "auth != null && auth.uid != null",
            
            "visible_to_all": {
              ".validate": "newData.val() === true"
            },
            
            "stored_at": {
              ".validate": "newData.isNumber() && newData.val() <= now + 300000"
            },
            
            "advice_type": {
              ".validate": "newData.isString()"
            },
            
            "content": {
              ".validate": "newData.isString()"
            },
            
            "confidence": {
              ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 1"
            },
            
            "timestamp": {
              ".validate": "newData.isNumber() && newData.val() <= now + 300000"
            }
          },
          
          "session_history": {
            ".read": "auth != null",
            ".write": "auth != null && auth.uid != null",
            
            "$sessionId": {
              "timestamp": {
                ".validate": "newData.isNumber() && newData.val() <= now + 300000"
              },
              
              "task_type": {
                ".validate": "newData.isString()"
              },
              
              "anonymous_votes": {
                "$anonId": {
                  ".validate": "newData.hasChild('role') && newData.hasChild('value')",
                  
                  "role": {
                    ".validate": "newData.isString() && (newData.val() === 'dev' || newData.val() === 'qa' || newData.val() === 'scrum_master' || newData.val() === 'po' || newData.val() === 'other')"
                  },
                  
                  "value": {
                    ".validate": "newData.isNumber() || newData.isString()"
                  }
                }
              },
              
              "statistics": {
                ".validate": "newData.hasChild('average_points') && newData.hasChild('consensus') && newData.hasChild('total_votes')",
                
                "average_points": {
                  ".validate": "newData.isNumber()"
                },
                
                "consensus": {
                  ".validate": "newData.isBoolean()"
                },
                
                "total_votes": {
                  ".validate": "newData.isNumber() && newData.val() >= 0"
                }
              }
            }
          },
          
          "learning_model": {
            ".read": "auth != null",
            ".write": "auth != null && auth.uid != null"
          },
          
          "metadata": {
            ".read": "auth != null",
            ".write": "auth != null && auth.uid != null",
            
            "cleanup_threshold": {
              ".validate": "newData.isNumber() && newData.val() > 0"
            },
            
            "last_cleanup": {
              ".validate": "newData.isNumber() && newData.val() <= now + 300000"
            }
          }
        }
      }
    },
    
    // 防止其他路徑的寫入
    "$other": {
      ".validate": false
    }
  }
}