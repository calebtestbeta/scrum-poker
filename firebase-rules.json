{
  "rules": {
    // Scrum Poker 遊戲房間規則
    "rooms": {
      "$roomId": {
        // 讀取權限：已認證用戶可讀取房間資料
        ".read": "auth != null",
        // 寫入權限：已認證用戶可寫入房間資料
        ".write": "auth != null",
        // 房間資料結構驗證
        ".validate": "newData.hasChildren(['gameState', 'players', 'createdAt', 'createdBy'])",
        
        // 遊戲狀態
        "gameState": {
          ".validate": "newData.hasChildren(['phase', 'votes']) && newData.child('phase').isString()",
          "phase": {
            ".validate": "newData.isString() && ['waiting', 'voting', 'revealed'].indexOf(newData.val()) >= 0"
          },
          "votes": {
            ".validate": "newData.isObject()"
          },
          "currentRound": {
            ".validate": "newData.isNumber()"
          },
          "lastActivity": {
            ".validate": "newData.isNumber()"
          }
        },
        
        // 玩家資料
        "players": {
          "$playerId": {
            ".validate": "newData.hasChildren(['name', 'role']) && newData.child('name').isString() && newData.child('role').isString()",
            "name": {
              ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 20"
            },
            "role": {
              ".validate": "newData.isString() && ['dev', 'qa', 'scrum_master', 'po', 'other'].indexOf(newData.val()) >= 0"
            },
            "taskType": {
              ".validate": "newData.isString()"
            },
            "joinedAt": {
              ".validate": "newData.isNumber()"
            },
            "isOnline": {
              ".validate": "newData.isBoolean()"
            },
            "lastSeen": {
              ".validate": "newData.isNumber()"
            }
          }
        },
        
        // 投票資料
        "votes": {
          "$playerId": {
            ".validate": "newData.isNumber() || newData.isString() || newData.val() === null"
          }
        },
        
        // 房間元資料
        "createdAt": {
          ".validate": "newData.isNumber()"
        },
        "createdBy": {
          ".validate": "newData.isString()"
        },
        "lastUpdated": {
          ".validate": "newData.isNumber()"
        },
        "settings": {
          "cardDeck": {
            ".validate": "newData.isString() && ['fibonacci', 'planning', 'tshirt'].indexOf(newData.val()) >= 0"
          },
          "autoReveal": {
            ".validate": "newData.isBoolean()"
          },
          "allowObservers": {
            ".validate": "newData.isBoolean()"
          }
        }
      }
    },
    
    // 使用者檔案（可選）
    "userProfiles": {
      "$userId": {
        ".read": "$userId === auth.uid || root.child('admins').child(auth.uid).exists()",
        ".write": "$userId === auth.uid || root.child('admins').child(auth.uid).exists()",
        "displayName": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 30"
        },
        "preferredRole": {
          ".validate": "newData.isString() && ['dev', 'qa', 'scrum_master', 'po', 'other'].indexOf(newData.val()) >= 0"
        },
        "preferredCardDeck": {
          ".validate": "newData.isString() && ['fibonacci', 'planning', 'tshirt'].indexOf(newData.val()) >= 0"
        },
        "totalGames": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "lastActive": {
          ".validate": "newData.isNumber()"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        }
      }
    },
    
    // 管理員權限
    "admins": {
      ".read": "root.child('admins').child(auth.uid).exists()",
      ".write": "root.child('admins').child(auth.uid).exists()",
      "$adminId": {
        ".validate": "newData.isBoolean()"
      }
    },
    
    // 系統統計（管理員專用）
    "statistics": {
      ".read": "root.child('admins').child(auth.uid).exists()",
      ".write": "root.child('admins').child(auth.uid).exists()",
      "totalRooms": {
        ".validate": "newData.isNumber()"
      },
      "totalUsers": {
        ".validate": "newData.isNumber()"
      },
      "totalVotes": {
        ".validate": "newData.isNumber()"
      },
      "lastUpdated": {
        ".validate": "newData.isNumber()"
      }
    },
    
    // 系統設定（管理員專用）
    "systemConfig": {
      ".read": "root.child('admins').child(auth.uid).exists()",
      ".write": "root.child('admins').child(auth.uid).exists()",
      "maxRoomsPerUser": {
        ".validate": "newData.isNumber() && newData.val() > 0"
      },
      "maxPlayersPerRoom": {
        ".validate": "newData.isNumber() && newData.val() > 0 && newData.val() <= 50"
      },
      "roomTimeout": {
        ".validate": "newData.isNumber() && newData.val() > 0"
      },
      "maintenanceMode": {
        ".validate": "newData.isBoolean()"
      }
    }
  }
}