{
  "category": "mobile",
  "displayName": "行動應用",
  "icon": "📱",
  "description": "行動應用開發任務的估點建議",
  "templates": {
    "highVariance": {
      "title": "📱 行動開發複雜度分歧",
      "content": "行動應用開發複雜度評估分歧，需討論：\n• 跨平台 vs 原生開發策略\n• 裝置相容性和效能要求\n• 第三方SDK和API整合\n• 應用商店發布流程規劃",
      "keywords": ["跨平台開發", "裝置相容性", "SDK整合", "應用商店"]
    },
    "lowVariance": {
      "title": "📲 行動開發方向明確",
      "content": "行動開發計畫共識良好！建議：\n• 確保響應式設計適配\n• 優化行動網路環境效能\n• 實作離線功能和資料同步\n• 測試各種螢幕尺寸和解析度",
      "keywords": ["響應式設計", "效能優化", "離線功能", "螢幕適配"]
    },
    "highEstimate": {
      "title": "🚀 複雜行動應用開發",
      "content": "這是個具挑戰性的行動開發任務！\n• 設計完整的行動架構\n• 實作複雜的使用者互動\n• 整合裝置原生功能\n• 建立完善的測試策略",
      "keywords": ["行動架構", "使用者互動", "原生功能", "測試策略"]
    },
    "lowEstimate": {
      "title": "⚡ 輕量行動功能開發",
      "content": "基礎行動功能開發，聚焦核心體驗：\n• 實作基本的觸控互動\n• 確保基本的行動體驗\n• 驗證核心功能在行動裝置運作\n• 測試基本的效能表現",
      "keywords": ["觸控互動", "行動體驗", "核心功能", "效能表現"]
    }
  },
  "technologies": ["React Native", "Flutter", "Cordova", "Ionic", "Native iOS/Android"],
  "commonChallenges": [
    "跨平台一致性維護",
    "行動裝置效能優化",
    "不同螢幕尺寸適配",
    "觸控操作體驗設計",
    "應用商店審核流程"
  ]
}