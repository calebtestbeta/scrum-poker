{
  "category": "testing",
  "displayName": "綜合測試",
  "icon": "🧪",
  "description": "測試相關任務的估點建議",
  "templates": {
    "highVariance": {
      "title": "🧪 測試策略需要對焦",
      "content": "測試複雜度評估差異較大，建議討論：\n• 測試範圍和深度規劃\n• 自動化測試 vs 手動測試比例\n• 測試環境設定複雜度\n• 測試資料準備工作量",
      "keywords": ["測試範圍", "自動化測試", "測試環境", "測試資料"]
    },
    "lowVariance": {
      "title": "✅ 測試團隊目標明確",
      "content": "測試評估一致，測試策略清晰！記得：\n• 優先撰寫關鍵路徑測試\n• 確保測試覆蓋率適當\n• 建立可維護的測試程式碼\n• 設定持續整合流程",
      "keywords": ["關鍵路徑", "測試覆蓋率", "可維護性", "持續整合"]
    },
    "highEstimate": {
      "title": "🎯 測試任務：精密模式",
      "content": "這個測試任務需要細心規劃！建議：\n• 建立完整的測試計畫\n• 設計邊界條件和異常情況測試\n• 考慮效能和負載測試\n• 準備充分的測試資料集",
      "keywords": ["測試計畫", "邊界測試", "效能測試", "測試資料"]
    },
    "lowEstimate": {
      "title": "🚀 測試任務：快速驗證",
      "content": "輕量級測試任務，但品質不打折：\n• 專注於核心功能驗證\n• 確保基本的煙霧測試\n• 檢查錯誤處理路徑\n• 驗證使用者介面互動",
      "keywords": ["核心功能", "煙霧測試", "錯誤處理", "UI互動"]
    }
  },
  "technologies": ["Jest", "Cypress", "Selenium", "JUnit", "Postman", "k6"],
  "commonChallenges": [
    "測試資料管理和清理",
    "非同步操作測試",
    "測試環境一致性",
    "測試執行時間優化",
    "測試程式碼可維護性"
  ]
}