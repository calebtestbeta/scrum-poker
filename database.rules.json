{
  "rules": {
    ".read": true,
    ".write": true,
    ".validate": "newData.hasChildren()",
    
    "rooms": {
      "$roomId": {
        ".validate": "$roomId.length >= 4 && $roomId.length <= 50 && $roomId.matches(/^[a-zA-Z0-9_-]+$/)",
        
        "created_at": {
          ".validate": "newData.isNumber() && newData.val() <= now + 300000"
        },
        
        "last_activity": {
          ".validate": "newData.isNumber() && newData.val() <= now + 300000"
        },
        
        "phase": {
          ".validate": "newData.isString() && (newData.val() === 'voting' || newData.val() === 'revealing' || newData.val() === 'finished')"
        },
        
        "task_type": {
          ".validate": "newData.isString() && newData.val().length <= 50"
        },
        
        "players": {
          "$playerId": {
            ".validate": "newData.hasChildren(['name', 'role']) && $playerId.length >= 8 && $playerId.length <= 100",
            
            "name": {
              ".validate": "newData.isString() && newData.val().length >= 1 && newData.val().length <= 20 && newData.val().matches(/^[a-zA-Z0-9\\u4e00-\\u9fff\\s_-]+$/)"
            },
            
            "role": {
              ".validate": "newData.isString() && (newData.val() === 'dev' || newData.val() === 'qa' || newData.val() === 'scrum_master' || newData.val() === 'po' || newData.val() === 'other')"
            },
            
            "joined_at": {
              ".validate": "newData.isNumber() && newData.val() <= now + 300000"
            },
            
            "last_active": {
              ".validate": "newData.isNumber() && newData.val() <= now + 300000"
            },
            
            "hasVoted": {
              ".validate": "newData.isBoolean()"
            },
            
            "vote": {
              ".validate": "newData.val() === null || newData.isNumber() || (newData.isString() && (newData.val() === 'coffee' || newData.val() === 'question' || newData.val() === 'infinity'))"
            }
          }
        },
        
        "votes": {
          "$playerId": {
            ".validate": "newData.hasChildren(['value', 'timestamp']) && $playerId.length >= 8 && $playerId.length <= 100",
            
            "value": {
              ".validate": "newData.isNumber() || (newData.isString() && (newData.val() === 'coffee' || newData.val() === 'question' || newData.val() === 'infinity'))"
            },
            
            "timestamp": {
              ".validate": "newData.isNumber() && newData.val() <= now + 300000"
            },
            
            "player_role": {
              ".validate": "newData.isString() && (newData.val() === 'dev' || newData.val() === 'qa' || newData.val() === 'scrum_master' || newData.val() === 'po' || newData.val() === 'other')"
            }
          }
        },
        
        "session_info": {
          "total_rounds": {
            ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 1000"
          },
          
          "average_votes": {
            ".validate": "newData.isString() && newData.val().length <= 200"
          },
          
          "completion_time": {
            ".validate": "newData.isString() && newData.val().length <= 100"
          }
        },
        
        "learning_data": {
          "current_advice": {
            "content": {
              ".validate": "newData.isString() && newData.val().length <= 5000"
            },
            
            "timestamp": {
              ".validate": "newData.isNumber() && newData.val() <= now + 300000"
            },
            
            "confidence": {
              ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 1"
            }
          }
        }
      }
    }
  }
}